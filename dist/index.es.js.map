{"version":3,"file":"index.es.js","sources":["../src/components/Button.js","../src/index.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Button({ toggleInit, type, activeType, buttonClass }) {\n  let btnClass = buttonClass || \"__ra-button\";\n  if (type === activeType) {\n    btnClass += \" active\";\n  }\n  return (\n    <button className={btnClass} onClick={() => toggleInit(type)}>\n      {type}\n    </button>\n  );\n}\n","import React, { Component } from \"react\";\nimport Button from \"./components/Button\";\n\nconst options = {\n  types: {\n    dot: true,\n    rectangle: true,\n    elipse: true\n  }\n};\n\nconst RannonatorContext = React.createContext({\n  init: false,\n  toggleInit: () => {}\n});\n\nexport const Annonation = ({ data, type }) => {\n  if (type == \"dot\") {\n    const { endX, endY } = data;\n    return (\n      <div\n        className=\"preview\"\n        style={{\n          left: endX + \"%\",\n          top: endY + \"%\",\n          transform: \"translate(-10px, -10px)\",\n          width: \"20px\",\n          height: \"20px\",\n          borderRadius: \"50%\"\n        }}\n      />\n    );\n  } else {\n    const { startX, startY, endX, endY, ratio } = data;\n    const left = startX - endX >= 0 ? endX + \"%\" : startX + \"%\";\n    const top = startY - endY >= 0 ? endY + \"%\" : startY + \"%\";\n    const width = Math.abs(endX - startX) + \"%\";\n    const height = Math.abs(endY - startY) + \"%\";\n    switch (type) {\n      case \"rectangle\":\n        return (\n          <div\n            className=\"preview\"\n            style={{\n              left,\n              top,\n              width,\n              height\n            }}\n          />\n        );\n      case \"elipse\":\n        return (\n          <div\n            className=\"preview\"\n            style={{\n              left,\n              top,\n              width,\n              height,\n              borderRadius: \"50%\"\n            }}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n};\n\nexport class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      isDrawing: false,\n      ratio: false,\n      width: 0,\n      height: 0,\n      startX: 0,\n      startY: 0,\n      endX: 0,\n      endY: 0\n    };\n  }\n  initDrawing = (e, init) => {\n    if (!init) {\n      return;\n    }\n    e.persist();\n    console.log(\"Init Active ----------------\");\n    // Prevent defualt drag behaivor when drawing(dragging)\n    this.myRef.current.ondragstart = e => e.preventDefault();\n\n    // Find width and height of canvas\n    const width = this.myRef.current.getBoundingClientRect().width,\n      height = this.myRef.current.getBoundingClientRect().height,\n      // Calculate postion in % for CSS Absolute Position\n      startX = (e.nativeEvent.offsetX / width) * 100,\n      startY = (e.nativeEvent.offsetY / height) * 100;\n\n    this.setState({\n      width,\n      height,\n      startX,\n      startY,\n      endX: startX,\n      endY: startY,\n      isDrawing: true\n    });\n  };\n\n  drawing = e => {\n    if (!this.state.isDrawing) {\n      return;\n    }\n\n    // Set Current Position of Cursor, relative to the canvas size\n    let endX,\n      ratio = false,\n      endY = (e.nativeEvent.offsetY / this.state.height) * 100;\n\n    if (e.shiftKey) {\n      endX = endY;\n      ratio = this.state.width / this.state.height;\n    } else {\n      endX = (e.nativeEvent.offsetX / this.state.width) * 100;\n    }\n\n    console.log(\"Drawing Active ----------------\");\n    this.setState({\n      ratio,\n      endX,\n      endY\n    });\n  };\n\n  endDrawing = finishDrawing => {\n    if (!this.state.isDrawing) {\n      return;\n    }\n    console.log(\"endDrawing Active ----------------\");\n\n    const res = {\n      startX: this.state.startX,\n      startY: this.state.startY,\n      endX: this.state.endX,\n      endY: this.state.endY\n    };\n\n    finishDrawing(res);\n    this.setState({\n      isDrawing: false,\n      startX: 0,\n      startY: 0,\n      endX: 0,\n      endY: 0\n    });\n  };\n\n  render() {\n    //const { startX, startY, endX, endY } = this.state;\n    //console.log(`x: ${startX} -- y: ${startY} ||| x: ${endX} -- y: ${endY}`);\n\n    return (\n      <React.Fragment>\n        <RannonatorContext.Consumer>\n          {value => (\n            <React.Fragment>\n              <div className=\"canvas-container\">\n                {this.props.children}\n                {this.state.isDrawing ? (\n                  <Annonation\n                    data={this.state}\n                    type={value.activeType}\n                    isDrawing={this.state.isDrawing}\n                  />\n                ) : null}\n                <div\n                  className=\"drawing-area\"\n                  ref={this.myRef}\n                  style={!value.init ? { zIndex: \"-1\" } : { zIndex: \"9999\" }}\n                  onMouseDown={e => this.initDrawing(e, value.init)}\n                  onMouseMove={this.drawing}\n                  onMouseUp={() => this.endDrawing(value.finishDrawing)}\n                />\n              </div>\n            </React.Fragment>\n          )}\n        </RannonatorContext.Consumer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport const ToolBar = () => (\n  <RannonatorContext.Consumer>\n    {contextValue => {\n      const buttons = Object.keys(contextValue.options.types).map(type => {\n        if (contextValue.options.types[type]) {\n          return (\n            <Button\n              key={type}\n              toggleInit={contextValue.toggleInit}\n              type={type}\n              activeType={contextValue.activeType}\n            />\n          );\n        }\n      });\n      return <div className=\"__ra-navbar\">{buttons}</div>;\n    }}\n  </RannonatorContext.Consumer>\n);\nexport default class Rannonator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      init: false,\n      activeType: \"\"\n    };\n  }\n\n  toggleInit = type => {\n    if (this.state.init && this.state.activeType == type) {\n      return this.setState({\n        init: false,\n        activeType: \"\"\n      });\n    }\n    this.setState({\n      init: true,\n      activeType: type\n    });\n  };\n  onFinishDraw = res => {\n    const newComment = {\n      data: res,\n      type: this.state.activeType\n    };\n    if (this.props.onFinish) {\n      return this.props.onFinish(newComment);\n    }\n  };\n\n  render() {\n    const { init, activeType } = this.state;\n\n    return (\n      <RannonatorContext.Provider\n        value={{\n          init: init,\n          activeType: activeType,\n          options: this.props.options || options,\n          toggleInit: this.toggleInit,\n          finishDrawing: this.onFinishDraw\n        }}\n      >\n        {this.props.children}\n      </RannonatorContext.Provider>\n    );\n  }\n}\n"],"names":["Button","toggleInit","type","activeType","buttonClass","btnClass","options","RannonatorContext","React","createContext","Annonation","data","endX","endY","startX","startY","ratio","left","top","width","Math","abs","height","Canvas","props","initDrawing","e","init","persist","log","myRef","current","ondragstart","preventDefault","getBoundingClientRect","nativeEvent","offsetX","offsetY","setState","drawing","state","isDrawing","shiftKey","endDrawing","res","createRef","children","value","zIndex","finishDrawing","Component","ToolBar","buttons","Object","keys","contextValue","types","map","Rannonator","onFinishDraw","newComment","onFinish"],"mappings":"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"}